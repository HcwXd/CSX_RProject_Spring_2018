SayHello <- function (name) {
print(name)
}
SayHello("Pecu") # Output > "Hello, Pecu"
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m)^2
# Return my.bmi
return (my.bmi)
}
GetBmi(180, 55) # return 16.97531
CheckBmiLevel <- function (my.height.cm, my.weight.kg) {
# Call the GetBmi function we just made
my.bmi <- GetBmi(my.height.cm, my.weight.kg)
if (my.bmi >= 35) {
return(paste("Your bmi: ", my.bmi, ", 重度肥胖!"))
} else if (my.bmi >= 30) {
return(paste("Your bmi: ", my.bmi, ", 中度肥胖!"))
} else if (my.bmi >= 27) {
return(paste("Your bmi: ", my.bmi, ", 輕度肥胖!"))
} else if (my.bmi >= 24) {
return(paste("Your bmi: ", my.bmi, ", 過重!"))
} else if (my.bmi >= 18.5) {
return(paste("Your bmi: ", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi: ", my.bmi, ", 過輕!"))
}
}
bmi.level.msg <- CheckBmiLevel(176, 70)
bmi.level.msg
GetLargest <- function (vector) {
print(paste("The Largest Number is :", max(vector)))
}
vec_1 <- c(1, 5, 10, 200, 2000, 121)
GetLargest(vec_1)
help("read.table")
help("dim")
help("read.table")
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
dim(df)
# 使用head()查看df前6筆資料
head(df)
# 使用tail()查看df後6筆資料
tail(df)
# 使用summary()查看df的描述性統計
summary(df)
# 使用str()查看df的詳細資訊
str(df)
help(as)
help(as.)
help("as.")
help("factor")
# 將df$School與df$Sex轉為factor型態
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
df$School
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
help("cbind")
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
# 使用cbind()，新增Height與Weight至df為欄(column)資料
df <- cbind(df, Height, Weight)
# 使用rbind()，新增kobe至df為列(row)資料
df <- rbind(df, Kobe)
str(df)
df
df$Grade["Kobe"] <- 990
df$Grade[11] <- 990
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
str(df)
help("order")
df <- df[order(df$Grade, decreasing = TRUE), ]
df
help("subset")
df <- subset(df, select = c(-Age))
df
names(df)[Grade] <- "ToeicGrade"
names(df)[df$Grade] <- "ToeicGrade"
names(df)[4] <- "ToeicGrade"
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
df[df$School == "A", ]
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df.sport
help(cut)
df$ToeicLevel <- cut(x = df$ToeicGrade,
breaks = c(0, 600, 700, 800, 900, Inf),
labels = c("E", "D", "C", "B", "A"))
help(mapply)
df$Bmi <- mapply(GetBmi(), df$Height, df$Weight)
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df$Bmi
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
help("merge")
rm(list = ls())
library(rvest)
install.packages("rvest")
library("rvest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:rvest", unload=TRUE)
library(rvest)
url <- "https://www.ptt.cc/bbs/NBA/index5720.html"
res <- read_html(url)
res
raw.titles <- res %>% html_nodes("div.title")
raw.titles
nba.article.link <- raw.titles %>% html_node("a") %>% html_attr('href')
nba.article.title <- raw.titles %>% html_text()
nba.df <- data.frame(nba.article.title, nba.article.link)
nba.df
nba.df.col.names <- c("title", "link")
colnames(nba.df) <- nba.df.col.names
nba.df
view(nba.df)
View(nba.df)
rm(list = ls())
help(rm)
library(jsonlite)
url <- "https://www.dcard.tw/_api/posts?popular=true"
res <- fromJSON(url)
res
View(res)
library(httr)
url <- "http://ecshweb.pchome.com.tw/search/v3.3/all/results?q=sony&page=1&sort=rnk/dc"
res = GET(url)
res_json = content(res)
View(res_json)
res_json
do.call(rbind,res_json$prods)
View(data.frame(do.call(rbind,res_json$prods)))
help("content")
help(do.call)
View(data.frame(do.call(rbind,res_json$prods)))
page.source <- read_html(url)
url <- "https://www.indiegogo.com/explore/all?project_type=campaign&project_timing=all&sort=trending"
install.packages("rvest")
library(rvest)
url <- "https://www.indiegogo.com/explore/all?project_type=campaign&project_timing=all&sort=trending"
page.source <- read_html(url)
page.source
View(page.source)
version.block <- html_nodes(page.source, ".discoverableCard")
head(version.block)
head(version.block)
title <- page.source%>%html_nodes('h3>a')%>%html_text(trim = T)
title
title <- page.source%>%html_nodes('discoverableCard')%>%html_text(trim = T)
title
View(title)
title <- page.source%>%html_nodes('.discoverableCard')%>%html_text(trim = T)
title
title <- page.source%>%html_nodes('.discoverableCard')
title <- page.source%>%html_nodes('discoverableCard-title ng-binding discoverableCard-lineClamp2')
title <- page.source%>%html_nodes('.discoverableCard')
title <- page.source%>%html_nodes('discoverableCard-title ng-binding discoverableCard-lineClamp2')
title
help(html_nodes)
title <- page.source%>%html_nodes('.discoverableCard-title .ng-binding .discoverableCard-lineClamp2')
title
title <- page.source %>% html_nodes('h1')
title
title <- page.source %>% html_nodes('H1')
title
page.source <- read_html(url)
page.source
title <- page.source %>% html_nodes('a')
title
title <- page.source %>% html_nodes('.discoverableCard-title')
title
title <- page.source %>% html_nodes('div.discoverableCard-title')
title
title <- page.source %>% html_nodes('discoverableCard.discoverableCard-title')
title
title <- page.source %>% html_nodes('discoverableCard-title ng-binding discoverableCard-lineClamp2')
title
title <- page.source %>% html_nodes('.discoverableCard-title .ng-binding .discoverableCard-lineClamp2')
tilte
title
title <- page.source %>% html_nodes('.discoverableCard-title.ng-binding.discoverableCard-lineClamp2')
title
rm
title <- page.source %>% html_nodes('.r-ent')
title
title <- page.source %>% html_nodes('r-ent')
title
library("magrittr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("rvest")
library(rvest)
url <- "https://www.ptt.cc/bbs/Soft_Job/index1338.html"
page.source <- read_html(url)
title <- page.source %>% html_nodes('r-ent')
install.packages("rvest")
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
View(df)
help("read.table")
dim(df)
str(df)
help("cbind")
help(mapply)
library(rvest)
library(magrittr)
library(XML)
library(ggplot2)
url <- "http://www.espn.com/nba/standings/_/season/2017/group/league"
table <- readHTMLTable(url,header = T,trim = T)
library(rvest)
library(magrittr)
url <- "https://www.flyingv.cc/projects?sort=hot"
page.source <- read_html(url)
